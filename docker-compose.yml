version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: screenplay-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - screenplay-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Application (Development)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: screenplay-app-dev
    restart: unless-stopped
    ports:
      - "5174:5174"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - screenplay-network
    profiles:
      - dev

  # Application (Production)
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: screenplay-app-prod
    restart: unless-stopped
    ports:
      - "4173:4173"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - screenplay-network
    profiles:
      - prod

volumes:
  mysql_data:

networks:
  screenplay-network:
    driver: bridge
